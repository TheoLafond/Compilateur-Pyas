

# Start pyc-objdump output

.set version_pyvm	 62211
.set flags		 0x00000040
.set filename		 "Python_Files-main/all Prime numbers in an Interval.py"
.set name		 "<module>"
.set stack_size		 3
.set arg_count		 0

.interned
	"range"
	"int"
	"append"
	"x"
	"y"
	"prime_list"
	"i"
	"j"
	"prime"
	"starting_range"
	"ending_range"
	"lst"
	"len"
	"<module>"

.consts
.code_start 4
.set version_pyvm	 62211
.set flags		 0x00000043
.set filename		 "Python_Files-main/all Prime numbers in an Interval.py"
.set name		 "prime"
.set stack_size		 7
.set arg_count		 2

.consts
	None
	0
	1
	2

.names
	"range"
	"int"
	"append"

.varnames
	"x"
	"y"
	"prime_list"
	"i"
	"j"

.text
.line 5
	BUILD_LIST            0
	STORE_FAST            2	# "prime_list"
.line 6
	SETUP_LOOP            label_6
	LOAD_GLOBAL           0
	LOAD_FAST             0	# "x"
	LOAD_FAST             1	# "y"
	CALL_FUNCTION         2
	GET_ITER              
label_0:
	FOR_ITER              label_5
	STORE_FAST            3	# "i"
.line 7
	LOAD_FAST             3	# "i"
	LOAD_CONST            1	# 0
	COMPARE_OP            2	# "=="
	POP_JUMP_IF_TRUE      label_0
	LOAD_FAST             3	# "i"
	LOAD_CONST            2	# 1
	COMPARE_OP            2	# "=="
	POP_JUMP_IF_FALSE     label_1
.line 8
	JUMP_ABSOLUTE         label_0
	JUMP_ABSOLUTE         label_0
.line 10
label_1:
	SETUP_LOOP            label_4
	LOAD_GLOBAL           0
	LOAD_CONST            3	# 2
	LOAD_GLOBAL           1
	LOAD_FAST             3	# "i"
	LOAD_CONST            3	# 2
	BINARY_DIVIDE         
	CALL_FUNCTION         1
	LOAD_CONST            2	# 1
	BINARY_ADD            
	CALL_FUNCTION         2
	GET_ITER              
label_2:
	FOR_ITER              label_3
	STORE_FAST            4	# "j"
.line 11
	LOAD_FAST             3	# "i"
	LOAD_FAST             4	# "j"
	BINARY_MODULO         
	LOAD_CONST            1	# 0
	COMPARE_OP            2	# "=="
	POP_JUMP_IF_FALSE     label_2
.line 12
	BREAK_LOOP            
	JUMP_ABSOLUTE         label_2
	JUMP_ABSOLUTE         label_2
label_3:
	POP_BLOCK             
.line 14
	LOAD_FAST             2	# "prime_list"
	LOAD_ATTR             2
	LOAD_FAST             3	# "i"
	CALL_FUNCTION         1
	POP_TOP               
label_4:
	JUMP_ABSOLUTE         label_0
label_5:
	POP_BLOCK             
.line 15
label_6:
	LOAD_FAST             2	# "prime_list"
	RETURN_VALUE          
.code_end
	2
	7
	0
	"There are no prime numbers in this range"
	"The prime numbers in this range are: "
	None

.names
	"prime"
	"starting_range"
	"ending_range"
	"lst"
	"len"

.text
.line 4
	LOAD_CONST            0	# <code:"prime">
	MAKE_FUNCTION         0
	STORE_NAME            0	# "prime"
.line 18
	LOAD_CONST            1	# 2
	STORE_NAME            1	# "starting_range"
.line 19
	LOAD_CONST            2	# 7
	STORE_NAME            2	# "ending_range"
.line 20
	LOAD_NAME             0	# "prime"
	LOAD_NAME             1	# "starting_range"
	LOAD_NAME             2	# "ending_range"
	CALL_FUNCTION         2
	STORE_NAME            3	# "lst"
.line 21
	LOAD_NAME             4	# "len"
	LOAD_NAME             3	# "lst"
	CALL_FUNCTION         1
	LOAD_CONST            3	# 0
	COMPARE_OP            2	# "=="
	POP_JUMP_IF_FALSE     label_0
.line 22
	LOAD_CONST            4	# "There are no prime numbers in this range"
	PRINT_ITEM            
	PRINT_NEWLINE         
	JUMP_FORWARD          label_1
.line 24
label_0:
	LOAD_CONST            5	# "The prime numbers in this range are: "
	LOAD_NAME             3	# "lst"
	BUILD_TUPLE           2
	PRINT_ITEM            
	PRINT_NEWLINE         
label_1:
	LOAD_CONST            6	# None
	RETURN_VALUE          

# Disassembled Mon Nov  7 05:20:17 2022

